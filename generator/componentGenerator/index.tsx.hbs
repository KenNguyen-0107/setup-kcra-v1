/**
*
* {{ properCase componentName }}
*
*/
{{#if wantMemo}}
import React, { memo } from 'react';
{{else}}
import React from 'react';
{{/if}}
{{#if wantStyledComponents}}
import styled from 'styled-components';
{{/if}}
{{#if wantTranslations}}
import { useTranslation } from 'react-i18next';

{{/if}}

interface I{{ properCase componentName }} {}

{{#if wantMemo}}
export const {{ properCase componentName }} = memo((props: I{{ properCase componentName }}) => {
{{else}}
export function {{ properCase componentName }}(props: Props) {
{{/if}}
  {{#if wantTranslations}}
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const { t, i18n } = useTranslation();
  {{/if}}

  return (
  {{#if wantStyledComponents}}
  <Wrapper>
  {{else}}
  <div>
  {{/if}}
    {{#if wantTranslations}}
    {t('')}
    {/*  {t(...messages.someThing())}  */}
    {{/if}}
  {{#if wantStyledComponents}}
  </Wrapper>
  {{else}}
  </div>
  {{/if}}
  );

{{#if wantMemo}}
});
{{else}}
};
{{/if}}

{{#if wantStyledComponents}}
const Wrapper = styled.div``;
{{/if}}
